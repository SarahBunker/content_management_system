1. When a user visits the path "/", the application should display the text "Getting started."
What: displaying "Getting started." from the url path "/"
How: create a route to "/" using GET method.

2. When a user visits the home page, they should see a list of the documents in the CMS: history.txt, changes.txt and about.txt
other information: Each document within the CMS will have a name that includes an extension. This extension will determine how the contents of the page are displayed in later steps.
What: Home page shows a list of documents. Document name includes an extension that will be used later. Documents are sorted alphabetically. Documents are shown in an unordered list format.
How:
- view pages have .erb extension
- create a layout template with boilerplate code
- yield to view page in the body
- create a view page for the index page
- in the view page create an unordered list and itterate through items in documents to print out their names.
- define the before method
  - create a key in the session object called documents.
  - For now add a value that is an array with three items in the array. with text values of the known document names.
- in the home path define an instance variable for the documents
  - sort the documents
- tell page to load the view with the layout

Refining:
- documents are actually txt files in the tree
  - create a directory called data
  - add three documents to the folder
- Use methods from File and Dir classes to get the list of documents and file paths
  - add links to document names to the document.

likely later:
- create views for documents based on file extension

3. Viewing Text Files:
 - When a user visits the index page, they are presented with a list of links, one for each document in the CMS.
 - When a user clicks on a document link in the index, they should be taken to a page that displays the content of the file whose name was clicked.
 - When a user visits the path /history.txt, they will be presented with the content of the document history.txt.
 - The browser should render a text file as a plain text file.
Other information:  Add data to sample files in directory

What: Add links to the documents. Add Route with Url "/FILENAME". Links show text file documents as plain text file
How:
frontend
- add links to document name with href based on name
- add view for viewing text file
backend
- add route to document
    - GET
    - document name will be a parameter in the URL

- index page shows a sign-in button
  - links to a new page with sign in form
    - text input labeled "username"
    - text input labeled "password"
    - submit button labeled "sign in"
  - submitting "admin" and "secret" signs in and redirects to index page.
    - message saying "Welcome!"
    - at the bottom of the index page
    - message (text) "Signed in as $USERNAME" followed by a button to sign-out
  - wrong inputs
    - redisplay sign in page
    - message says "Invalid Credentials"
    - username should now have a default of the incorrect username
  - signing out
    - signed out
    - redirected to index page
    - message that says, "You have been signed out."